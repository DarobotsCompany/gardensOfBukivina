import { Ctx, Hears, InjectBot, Update } from 'nestjs-telegraf';
import { ISessionContext } from '../interfaces/session-context.interface';
import { MENU_TRIGGERS } from '../constants/bot-triggers';
import { Context, Telegraf } from 'telegraf';
import { Injectable } from '@nestjs/common';
import { supportTypeKeyboard } from '../keyboards/support-type.keyboard';

@Update()
@Injectable()
export class BotMenuService {
    constructor(
        @InjectBot('bot') private readonly bot: Telegraf<Context>,
    ) {}

    @Hears(MENU_TRIGGERS.editorChoice)
    async onEditorChoice(@Ctx() ctx: ISessionContext) {
        await ctx.reply('–¢—É—Ç –±—É–¥–µ –≤–∏–±—ñ—Ä —Ä–µ–¥–∞–∫—Ü—ñ—ó üìö');
    }

    @Hears(MENU_TRIGGERS.searchByName)
    async onSearchByName(@Ctx() ctx: ISessionContext) {
        await ctx.reply('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É –¥–ª—è –ø–æ—à—É–∫—É üîé');
    }

    @Hears(MENU_TRIGGERS.cart)
    async onCart(@Ctx() ctx: ISessionContext) {
        await ctx.reply('–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üõí');
    }

    @Hears(MENU_TRIGGERS.orders)
    async onOrders(@Ctx() ctx: ISessionContext) {
        await ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å üì¶');
    }

    @Hears(MENU_TRIGGERS.info)
    async onInfo(@Ctx() ctx: ISessionContext) {
        await ctx.reply('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤—ñ—Å ‚ö†Ô∏èüñã');
    }

    @Hears(MENU_TRIGGERS.support)
    async onSupport(@Ctx() ctx: ISessionContext) {
        await ctx.reply(
            '–í–∏ –º–æ–∂–µ—Ç–µ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –Ω–∞–º –∑–∞ –Ω–æ–º–µ—Ä–æ–º, –∞–±–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—î –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è, —á–∏ –∑–∞–º–æ–≤—Ç–µ –¥–∑–≤—ñ–Ω–æ–∫ ‚¨áÔ∏è',
            supportTypeKeyboard
        );
    }
}
